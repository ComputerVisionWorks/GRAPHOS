#include <QFile>
#include <QTextOStream>

#include "AppuisWriter.h"

using namespace PW;
AppuisWriter::AppuisWriter(Project *project):
    mProject(project)
{
}

int PW::AppuisWriter::writeDicoAppuis(QString url)
{
    QFile file(url);
    file.open(QIODevice::WriteOnly);
    QTextStream out(&file);
    out << "<?xml version=\"1.0\" ?> \n";
    out << "<Global>\n";
    out << "\t<DicoAppuisFlottant>\n";

    QList<PW3dPoint *> *controlPoints = mProject->getModelCPoints();
    for(int i= 0; i<controlPoints->count(); i++){
        PW3dPoint *point =  controlPoints->at(i);
        if(point->getCoord(0) != 0 || point->getCoord(1) != 0 || point->getCoord(2) != 0){
            out << "\t\t<OneAppuisDAF>\n";
            out << "\t\t\t<Pt>    " << QString::number(controlPoints->at(i)->getCoord(0),'f',5) << "    " <<
                   QString::number(controlPoints->at(i)->getCoord(1),'f',5) << "    " <<
                   QString::number(controlPoints->at(i)->getCoord(2),'f',5) << "</Pt>\n";
            out << "\t\t\t<NamePt>" << "    " << controlPoints->at(i)->getName() << "</NamePt>\n";
            out << "\t\t\t<Incertitude>       0.002       0.002       0.002</Incertitude>\n";  //******************TODO; Parametrizar.***********************
            out << "\t\t</OneAppuisDAF>\n";
        }
    }

    out << "\t</DicoAppuisFlottant>\n";
    out << "</Global>";

    return 0;
}

int PW::AppuisWriter::writeMesureAppuis(QString url)
{
    //Mapping zerro model points:
    QList<PW3dPoint *> *controlPoints = mProject->getModelCPoints();
    QMap<QString, PW3dPoint *> zeroPoints;
    for(int i= 0; i<controlPoints->count(); i++){
        PW3dPoint *point =  controlPoints->at(i);
        if(point->getCoord(0) == 0 && point->getCoord(1) == 0 && point->getCoord(2) == 0){
            zeroPoints.insert(point->getName(),point);
        }
    }

    QFile file(url);
    file.open(QIODevice::WriteOnly);
    QTextStream out(&file);
    out << "<?xml version=\"1.0\" ?> \n";
    out << "<SetOfMesureAppuisFlottants>\n";
    QList<PW::PWImage *> images = mProject->getImages();
    for (int i = 0; i< images.count(); i++){
        out << "\t<MesureAppuiFlottant1Im>\n";
        out << "\t\t<NameIm>" << images.at(i)->getFileName() << "</NameIm>\n";
        for (int p = 0; p< images.at(i)->getControlPoints()->count(); p++){
            if(!zeroPoints.contains(images.at(i)->getControlPoints()->at(p)->getName())){
                out << "\t\t\t<OneMesureAF1I>\n";
                out << "\t\t\t\t<NamePt>" << images.at(i)->getControlPoints()->at(p)->getName() << "</NamePt>\n";
                out << "\t\t\t\t<PtIm> " << images.at(i)->getControlPoints()->at(p)->getCoord(0) <<
                       " "<< images.at(i)->getControlPoints()->at(p)->getCoord(1) << "</PtIm>\n";
                out << "\t\t\t</OneMesureAF1I>\n";
            }
        }
        out << "\t</MesureAppuiFlottant1Im>\n";
    }
    out << "</SetOfMesureAppuisFlottants>";

    return 0;
}
