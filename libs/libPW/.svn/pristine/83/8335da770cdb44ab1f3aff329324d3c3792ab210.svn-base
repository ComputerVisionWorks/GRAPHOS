#include "PWMatchesCategory.h"

using namespace PW;


PWMatchesCategory::PWMatchesCategory(Project *project,
                                     int id,
                                     QString description,
                                     QString metadata,
                                     QString timeCalculation):
    mProject(project),
    mId(id),
    mDescription(description),
    mMetadata(metadata),
    mTimeCalculation(timeCalculation)
{
    mGraphImages=NULL;
}

int PWMatchesCategory::getId()
{
    return mId;
}

QString PWMatchesCategory::getDescription()
{
    return(mDescription);
}

PWGraphImages *PWMatchesCategory::getGraphImages()
{
    return(mGraphImages);
}

void PWMatchesCategory::getImagePairs(QMap<QString, QVector<QString> > &imagesPairs)
{
    imagesPairs.clear();
    imagesPairs=mImagesPairs;
}

QString PWMatchesCategory::getMetadata()
{
    return(mMetadata);
}

QString PWMatchesCategory::getTimeCalculation()
{
    return(mTimeCalculation);
}

void PWMatchesCategory::getInvalidMatchedCategoryExplanation(QString &title, QStringList &subgraphs)
{
    if(mGraphImages!=NULL)
        mGraphImages->getInvalidMatchedCategoryExplanation(title,subgraphs);
}

Project *PWMatchesCategory::getProject()
{
    return mProject;
}

bool PWMatchesCategory::isValid()
{
    bool isValid=false;
    if(mGraphImages!=NULL)
        isValid=mGraphImages->isValid();
    return(isValid);
}

void PWMatchesCategory::setImagePairs(QMap<QString, QVector<QString> > &imagesPairs)
{
    mImagesPairs=imagesPairs;
}

void PWMatchesCategory::setGraphImages(PWGraphImages *graphImages)
{
    mGraphImages=graphImages;
}
