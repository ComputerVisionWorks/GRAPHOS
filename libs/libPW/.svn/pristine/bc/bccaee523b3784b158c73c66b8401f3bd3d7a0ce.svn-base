#include "MSDkpd.h"
#include <QDir>

using namespace cv;
using namespace PW;

MSDkpd::MSDkpd(QString inputFile, QString outputDir, ProcessedImageData *metadata):
    mInputFile(inputFile),
    mOtputDir(outputDir),
    mImageMetadata(metadata)
{
}

void MSDkpd::run()
{
    QString matchesFolder = mOtputDir;

    QDir matchingMethodDir(matchesFolder+"/tapioca");
    QString imageMatchings = matchesFolder+"/tapioca/Pastis"+mInputFile.split("/").last();
    if(!matchingMethodDir.exists(imageMatchings))
    {
        matchingMethodDir.mkdir(imageMatchings);
    }
    cv::String cvImageFileName = mInputFile.toLatin1();

    cv::Mat cvImg = cv::imread(cvImageFileName, CV_LOAD_IMAGE_COLOR);
    mOriginalImageWidth=cvImg.cols;
    mOriginalImageHeight=cvImg.rows;
    int newImageWidth=1500;

    if (cvImg.size[1]>newImageWidth) {
        //Scale

        int newImageHeight = (int)(cvImg.rows*newImageWidth/cvImg.cols);

        mImageScaleFactorX = (float)newImageWidth/(float)mOriginalImageWidth;
        mImageScaleFactorY = (float)newImageHeight/(float)mOriginalImageHeight;

        Size newSize(newImageWidth,newImageHeight);

        cv::resize(cvImg,cvImg,newSize,INTER_NEAREST    ); //resize image
    }


    MsdDetector msdLeft;
    msdLeft.setThSaliency(750.0f);

    cv::Mat kpsImg;
    cv::Mat auxImage;


    cv::cvtColor(cvImg,kpsImg,CV_RGB2GRAY);

    std::vector<cv::KeyPoint> cvImg_keyPoints;
    cvImg_keyPoints.clear();

    cvImg_keyPoints = msdLeft.detectandcompute(kpsImg,auxImage);

    cv::Ptr<cv::xfeatures2d::SIFT> detector = cv::xfeatures2d::SIFT::create();
    cv::Mat cvDescriptors;

    detector->compute(kpsImg,cvImg_keyPoints,cvDescriptors);


    mImageMetadata->setTiepoints(cvImg_keyPoints);
    mImageMetadata->setDescriptors(cvDescriptors);
    QFileInfo inputFileInfo (mInputFile);
    QString imageFileName = inputFileInfo.fileName();
    mImageMetadata->setImageName(imageFileName);
}
